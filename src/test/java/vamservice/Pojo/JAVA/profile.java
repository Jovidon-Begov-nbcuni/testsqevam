package vamservice.Pojo.JAVA; /**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class profile extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1240440288540458137L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\n" +
          "\t\"type\": \"record\",\n" +
          "\t\"name\": \"profile\",\n" +
          "\t\"fields\": [{\n" +
          "\t\t\"name\": \"username\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"targetedoptin\",\n" +
          "\t\t\"type\": [\"null\", \"boolean\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"trackingid\",\n" +
          "\t\t\"type\": \"string\"\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"firstname\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"title\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"emailverified\",\n" +
          "\t\t\"type\": [\"null\", \"boolean\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"targetedoptindate\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"services\",\n" +
          "\t\t\"type\": {\n" +
          "\t\t\t\"type\": \"map\",\n" +
          "\t\t\t\"values\": {\n" +
          "\t\t\t\t\"type\": \"record\",\n" +
          "\t\t\t\t\"name\": \"services_value\",\n" +
          "\t\t\t\t\"fields\": [{\n" +
          "\t\t\t\t\t\"name\": \"start\",\n" +
          "\t\t\t\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t\t\t\t}, {\n" +
          "\t\t\t\t\t\"name\": \"end\",\n" +
          "\t\t\t\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t\t\t\t}, {\n" +
          "\t\t\t\t\t\"name\": \"globalaccess\",\n" +
          "\t\t\t\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t\t\t\t}, {\n" +
          "\t\t\t\t\t\"name\": \"mailbox\",\n" +
          "\t\t\t\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t\t\t\t}, {\n" +
          "\t\t\t\t\t\"name\": \"name\",\n" +
          "\t\t\t\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t\t\t\t}, {\n" +
          "\t\t\t\t\t\"name\": \"suspended\",\n" +
          "\t\t\t\t\t\"type\": [\"null\", \"boolean\"]\n" +
          "\t\t\t\t}, {\n" +
          "\t\t\t\t\t\"name\": \"fullysignedup\",\n" +
          "\t\t\t\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t\t\t\t}]\n" +
          "\t\t\t}\n" +
          "\t\t}\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"mobilenumber\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"targetedoptoutdate\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"hhuserauthorised\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"dateofbirth\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"hhid\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"mobilenumberverified\",\n" +
          "\t\t\"type\": [\"null\", \"boolean\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"displayname\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"securityquestionid\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"mobilenumberchanged\",\n" +
          "\t\t\"type\": [\"null\", \"long\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"skyoptin\",\n" +
          "\t\t\"type\": \"boolean\"\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"email\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"contactemail\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"emailchanged\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"euportability\",\n" +
          "\t\t\"type\": \"boolean\"\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"hhusertype\",\n" +
          "\t\t\"type\": \"string\"\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"lastname\",\n" +
          "\t\t\"type\": [\"null\", \"string\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"termsandconditionsaccepted\",\n" +
          "\t\t\"type\": \"boolean\"\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"nsprofileid\",\n" +
          "\t\t\"type\": \"string\"\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"passwordrequireschange\",\n" +
          "\t\t\"type\": [\"null\", \"boolean\"]\n" +
          "\t}, {\n" +
          "\t\t\"name\": \"registrationdate\",\n" +
          "\t\t\"type\": \"string\"\n" +
          "\t}]\n" +
          "}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<profile> ENCODER =
      new BinaryMessageEncoder<profile>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<profile> DECODER =
      new BinaryMessageDecoder<profile>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<profile> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<profile> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<profile> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<profile>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this profile to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a profile from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a profile instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static profile fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence username;
   private java.lang.Boolean targetedoptin;
   private java.lang.CharSequence trackingid;
   private java.lang.CharSequence firstname;
   private java.lang.CharSequence title;
   private java.lang.Boolean emailverified;
   private java.lang.CharSequence targetedoptindate;
   private java.util.Map<java.lang.CharSequence,services_value> services;
   private java.lang.CharSequence mobilenumber;
   private java.lang.CharSequence targetedoptoutdate;
   private java.lang.CharSequence hhuserauthorised;
   private java.lang.CharSequence dateofbirth;
   private java.lang.CharSequence hhid;
   private java.lang.Boolean mobilenumberverified;
   private java.lang.CharSequence displayname;
   private java.lang.CharSequence securityquestionid;
   private java.lang.Long mobilenumberchanged;
   private boolean skyoptin;
   private java.lang.CharSequence email;
   private java.lang.CharSequence contactemail;
   private java.lang.CharSequence emailchanged;
   private boolean euportability;
   private java.lang.CharSequence hhusertype;
   private java.lang.CharSequence lastname;
   private boolean termsandconditionsaccepted;
   private java.lang.CharSequence nsprofileid;
   private java.lang.Boolean passwordrequireschange;
   private java.lang.CharSequence registrationdate;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public profile() {}

  /**
   * All-args constructor.
   * @param username The new value for username
   * @param targetedoptin The new value for targetedoptin
   * @param trackingid The new value for trackingid
   * @param firstname The new value for firstname
   * @param title The new value for title
   * @param emailverified The new value for emailverified
   * @param targetedoptindate The new value for targetedoptindate
   * @param services The new value for services
   * @param mobilenumber The new value for mobilenumber
   * @param targetedoptoutdate The new value for targetedoptoutdate
   * @param hhuserauthorised The new value for hhuserauthorised
   * @param dateofbirth The new value for dateofbirth
   * @param hhid The new value for hhid
   * @param mobilenumberverified The new value for mobilenumberverified
   * @param displayname The new value for displayname
   * @param securityquestionid The new value for securityquestionid
   * @param mobilenumberchanged The new value for mobilenumberchanged
   * @param skyoptin The new value for skyoptin
   * @param email The new value for email
   * @param contactemail The new value for contactemail
   * @param emailchanged The new value for emailchanged
   * @param euportability The new value for euportability
   * @param hhusertype The new value for hhusertype
   * @param lastname The new value for lastname
   * @param termsandconditionsaccepted The new value for termsandconditionsaccepted
   * @param nsprofileid The new value for nsprofileid
   * @param passwordrequireschange The new value for passwordrequireschange
   * @param registrationdate The new value for registrationdate
   */
  public profile(java.lang.CharSequence username, java.lang.Boolean targetedoptin, java.lang.CharSequence trackingid, java.lang.CharSequence firstname, java.lang.CharSequence title, java.lang.Boolean emailverified, java.lang.CharSequence targetedoptindate, java.util.Map<java.lang.CharSequence,services_value> services, java.lang.CharSequence mobilenumber, java.lang.CharSequence targetedoptoutdate, java.lang.CharSequence hhuserauthorised, java.lang.CharSequence dateofbirth, java.lang.CharSequence hhid, java.lang.Boolean mobilenumberverified, java.lang.CharSequence displayname, java.lang.CharSequence securityquestionid, java.lang.Long mobilenumberchanged, java.lang.Boolean skyoptin, java.lang.CharSequence email, java.lang.CharSequence contactemail, java.lang.CharSequence emailchanged, java.lang.Boolean euportability, java.lang.CharSequence hhusertype, java.lang.CharSequence lastname, java.lang.Boolean termsandconditionsaccepted, java.lang.CharSequence nsprofileid, java.lang.Boolean passwordrequireschange, java.lang.CharSequence registrationdate) {
    this.username = username;
    this.targetedoptin = targetedoptin;
    this.trackingid = trackingid;
    this.firstname = firstname;
    this.title = title;
    this.emailverified = emailverified;
    this.targetedoptindate = targetedoptindate;
    this.services = services;
    this.mobilenumber = mobilenumber;
    this.targetedoptoutdate = targetedoptoutdate;
    this.hhuserauthorised = hhuserauthorised;
    this.dateofbirth = dateofbirth;
    this.hhid = hhid;
    this.mobilenumberverified = mobilenumberverified;
    this.displayname = displayname;
    this.securityquestionid = securityquestionid;
    this.mobilenumberchanged = mobilenumberchanged;
    this.skyoptin = skyoptin;
    this.email = email;
    this.contactemail = contactemail;
    this.emailchanged = emailchanged;
    this.euportability = euportability;
    this.hhusertype = hhusertype;
    this.lastname = lastname;
    this.termsandconditionsaccepted = termsandconditionsaccepted;
    this.nsprofileid = nsprofileid;
    this.passwordrequireschange = passwordrequireschange;
    this.registrationdate = registrationdate;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return username;
    case 1: return targetedoptin;
    case 2: return trackingid;
    case 3: return firstname;
    case 4: return title;
    case 5: return emailverified;
    case 6: return targetedoptindate;
    case 7: return services;
    case 8: return mobilenumber;
    case 9: return targetedoptoutdate;
    case 10: return hhuserauthorised;
    case 11: return dateofbirth;
    case 12: return hhid;
    case 13: return mobilenumberverified;
    case 14: return displayname;
    case 15: return securityquestionid;
    case 16: return mobilenumberchanged;
    case 17: return skyoptin;
    case 18: return email;
    case 19: return contactemail;
    case 20: return emailchanged;
    case 21: return euportability;
    case 22: return hhusertype;
    case 23: return lastname;
    case 24: return termsandconditionsaccepted;
    case 25: return nsprofileid;
    case 26: return passwordrequireschange;
    case 27: return registrationdate;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: username = (java.lang.CharSequence)value$; break;
    case 1: targetedoptin = (java.lang.Boolean)value$; break;
    case 2: trackingid = (java.lang.CharSequence)value$; break;
    case 3: firstname = (java.lang.CharSequence)value$; break;
    case 4: title = (java.lang.CharSequence)value$; break;
    case 5: emailverified = (java.lang.Boolean)value$; break;
    case 6: targetedoptindate = (java.lang.CharSequence)value$; break;
    case 7: services = (java.util.Map<java.lang.CharSequence,services_value>)value$; break;
    case 8: mobilenumber = (java.lang.CharSequence)value$; break;
    case 9: targetedoptoutdate = (java.lang.CharSequence)value$; break;
    case 10: hhuserauthorised = (java.lang.CharSequence)value$; break;
    case 11: dateofbirth = (java.lang.CharSequence)value$; break;
    case 12: hhid = (java.lang.CharSequence)value$; break;
    case 13: mobilenumberverified = (java.lang.Boolean)value$; break;
    case 14: displayname = (java.lang.CharSequence)value$; break;
    case 15: securityquestionid = (java.lang.CharSequence)value$; break;
    case 16: mobilenumberchanged = (java.lang.Long)value$; break;
    case 17: skyoptin = (java.lang.Boolean)value$; break;
    case 18: email = (java.lang.CharSequence)value$; break;
    case 19: contactemail = (java.lang.CharSequence)value$; break;
    case 20: emailchanged = (java.lang.CharSequence)value$; break;
    case 21: euportability = (java.lang.Boolean)value$; break;
    case 22: hhusertype = (java.lang.CharSequence)value$; break;
    case 23: lastname = (java.lang.CharSequence)value$; break;
    case 24: termsandconditionsaccepted = (java.lang.Boolean)value$; break;
    case 25: nsprofileid = (java.lang.CharSequence)value$; break;
    case 26: passwordrequireschange = (java.lang.Boolean)value$; break;
    case 27: registrationdate = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'username' field.
   * @return The value of the 'username' field.
   */
  public java.lang.CharSequence getUsername() {
    return username;
  }


  /**
   * Sets the value of the 'username' field.
   * @param value the value to set.
   */
  public void setUsername(java.lang.CharSequence value) {
    this.username = value;
  }

  /**
   * Gets the value of the 'targetedoptin' field.
   * @return The value of the 'targetedoptin' field.
   */
  public java.lang.Boolean getTargetedoptin() {
    return targetedoptin;
  }


  /**
   * Sets the value of the 'targetedoptin' field.
   * @param value the value to set.
   */
  public void setTargetedoptin(java.lang.Boolean value) {
    this.targetedoptin = value;
  }

  /**
   * Gets the value of the 'trackingid' field.
   * @return The value of the 'trackingid' field.
   */
  public java.lang.CharSequence getTrackingid() {
    return trackingid;
  }


  /**
   * Sets the value of the 'trackingid' field.
   * @param value the value to set.
   */
  public void setTrackingid(java.lang.CharSequence value) {
    this.trackingid = value;
  }

  /**
   * Gets the value of the 'firstname' field.
   * @return The value of the 'firstname' field.
   */
  public java.lang.CharSequence getFirstname() {
    return firstname;
  }


  /**
   * Sets the value of the 'firstname' field.
   * @param value the value to set.
   */
  public void setFirstname(java.lang.CharSequence value) {
    this.firstname = value;
  }

  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public java.lang.CharSequence getTitle() {
    return title;
  }


  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.CharSequence value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'emailverified' field.
   * @return The value of the 'emailverified' field.
   */
  public java.lang.Boolean getEmailverified() {
    return emailverified;
  }


  /**
   * Sets the value of the 'emailverified' field.
   * @param value the value to set.
   */
  public void setEmailverified(java.lang.Boolean value) {
    this.emailverified = value;
  }

  /**
   * Gets the value of the 'targetedoptindate' field.
   * @return The value of the 'targetedoptindate' field.
   */
  public java.lang.CharSequence getTargetedoptindate() {
    return targetedoptindate;
  }


  /**
   * Sets the value of the 'targetedoptindate' field.
   * @param value the value to set.
   */
  public void setTargetedoptindate(java.lang.CharSequence value) {
    this.targetedoptindate = value;
  }

  /**
   * Gets the value of the 'services' field.
   * @return The value of the 'services' field.
   */
  public java.util.Map<java.lang.CharSequence,services_value> getServices() {
    return services;
  }


  /**
   * Sets the value of the 'services' field.
   * @param value the value to set.
   */
  public void setServices(java.util.Map<java.lang.CharSequence,services_value> value) {
    this.services = value;
  }

  /**
   * Gets the value of the 'mobilenumber' field.
   * @return The value of the 'mobilenumber' field.
   */
  public java.lang.CharSequence getMobilenumber() {
    return mobilenumber;
  }


  /**
   * Sets the value of the 'mobilenumber' field.
   * @param value the value to set.
   */
  public void setMobilenumber(java.lang.CharSequence value) {
    this.mobilenumber = value;
  }

  /**
   * Gets the value of the 'targetedoptoutdate' field.
   * @return The value of the 'targetedoptoutdate' field.
   */
  public java.lang.CharSequence getTargetedoptoutdate() {
    return targetedoptoutdate;
  }


  /**
   * Sets the value of the 'targetedoptoutdate' field.
   * @param value the value to set.
   */
  public void setTargetedoptoutdate(java.lang.CharSequence value) {
    this.targetedoptoutdate = value;
  }

  /**
   * Gets the value of the 'hhuserauthorised' field.
   * @return The value of the 'hhuserauthorised' field.
   */
  public java.lang.CharSequence getHhuserauthorised() {
    return hhuserauthorised;
  }


  /**
   * Sets the value of the 'hhuserauthorised' field.
   * @param value the value to set.
   */
  public void setHhuserauthorised(java.lang.CharSequence value) {
    this.hhuserauthorised = value;
  }

  /**
   * Gets the value of the 'dateofbirth' field.
   * @return The value of the 'dateofbirth' field.
   */
  public java.lang.CharSequence getDateofbirth() {
    return dateofbirth;
  }


  /**
   * Sets the value of the 'dateofbirth' field.
   * @param value the value to set.
   */
  public void setDateofbirth(java.lang.CharSequence value) {
    this.dateofbirth = value;
  }

  /**
   * Gets the value of the 'hhid' field.
   * @return The value of the 'hhid' field.
   */
  public java.lang.CharSequence getHhid() {
    return hhid;
  }


  /**
   * Sets the value of the 'hhid' field.
   * @param value the value to set.
   */
  public void setHhid(java.lang.CharSequence value) {
    this.hhid = value;
  }

  /**
   * Gets the value of the 'mobilenumberverified' field.
   * @return The value of the 'mobilenumberverified' field.
   */
  public java.lang.Boolean getMobilenumberverified() {
    return mobilenumberverified;
  }


  /**
   * Sets the value of the 'mobilenumberverified' field.
   * @param value the value to set.
   */
  public void setMobilenumberverified(java.lang.Boolean value) {
    this.mobilenumberverified = value;
  }

  /**
   * Gets the value of the 'displayname' field.
   * @return The value of the 'displayname' field.
   */
  public java.lang.CharSequence getDisplayname() {
    return displayname;
  }


  /**
   * Sets the value of the 'displayname' field.
   * @param value the value to set.
   */
  public void setDisplayname(java.lang.CharSequence value) {
    this.displayname = value;
  }

  /**
   * Gets the value of the 'securityquestionid' field.
   * @return The value of the 'securityquestionid' field.
   */
  public java.lang.CharSequence getSecurityquestionid() {
    return securityquestionid;
  }


  /**
   * Sets the value of the 'securityquestionid' field.
   * @param value the value to set.
   */
  public void setSecurityquestionid(java.lang.CharSequence value) {
    this.securityquestionid = value;
  }

  /**
   * Gets the value of the 'mobilenumberchanged' field.
   * @return The value of the 'mobilenumberchanged' field.
   */
  public java.lang.Long getMobilenumberchanged() {
    return mobilenumberchanged;
  }


  /**
   * Sets the value of the 'mobilenumberchanged' field.
   * @param value the value to set.
   */
  public void setMobilenumberchanged(java.lang.Long value) {
    this.mobilenumberchanged = value;
  }

  /**
   * Gets the value of the 'skyoptin' field.
   * @return The value of the 'skyoptin' field.
   */
  public boolean getSkyoptin() {
    return skyoptin;
  }


  /**
   * Sets the value of the 'skyoptin' field.
   * @param value the value to set.
   */
  public void setSkyoptin(boolean value) {
    this.skyoptin = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'contactemail' field.
   * @return The value of the 'contactemail' field.
   */
  public java.lang.CharSequence getContactemail() {
    return contactemail;
  }


  /**
   * Sets the value of the 'contactemail' field.
   * @param value the value to set.
   */
  public void setContactemail(java.lang.CharSequence value) {
    this.contactemail = value;
  }

  /**
   * Gets the value of the 'emailchanged' field.
   * @return The value of the 'emailchanged' field.
   */
  public java.lang.CharSequence getEmailchanged() {
    return emailchanged;
  }


  /**
   * Sets the value of the 'emailchanged' field.
   * @param value the value to set.
   */
  public void setEmailchanged(java.lang.CharSequence value) {
    this.emailchanged = value;
  }

  /**
   * Gets the value of the 'euportability' field.
   * @return The value of the 'euportability' field.
   */
  public boolean getEuportability() {
    return euportability;
  }


  /**
   * Sets the value of the 'euportability' field.
   * @param value the value to set.
   */
  public void setEuportability(boolean value) {
    this.euportability = value;
  }

  /**
   * Gets the value of the 'hhusertype' field.
   * @return The value of the 'hhusertype' field.
   */
  public java.lang.CharSequence getHhusertype() {
    return hhusertype;
  }


  /**
   * Sets the value of the 'hhusertype' field.
   * @param value the value to set.
   */
  public void setHhusertype(java.lang.CharSequence value) {
    this.hhusertype = value;
  }

  /**
   * Gets the value of the 'lastname' field.
   * @return The value of the 'lastname' field.
   */
  public java.lang.CharSequence getLastname() {
    return lastname;
  }


  /**
   * Sets the value of the 'lastname' field.
   * @param value the value to set.
   */
  public void setLastname(java.lang.CharSequence value) {
    this.lastname = value;
  }

  /**
   * Gets the value of the 'termsandconditionsaccepted' field.
   * @return The value of the 'termsandconditionsaccepted' field.
   */
  public boolean getTermsandconditionsaccepted() {
    return termsandconditionsaccepted;
  }


  /**
   * Sets the value of the 'termsandconditionsaccepted' field.
   * @param value the value to set.
   */
  public void setTermsandconditionsaccepted(boolean value) {
    this.termsandconditionsaccepted = value;
  }

  /**
   * Gets the value of the 'nsprofileid' field.
   * @return The value of the 'nsprofileid' field.
   */
  public java.lang.CharSequence getNsprofileid() {
    return nsprofileid;
  }


  /**
   * Sets the value of the 'nsprofileid' field.
   * @param value the value to set.
   */
  public void setNsprofileid(java.lang.CharSequence value) {
    this.nsprofileid = value;
  }

  /**
   * Gets the value of the 'passwordrequireschange' field.
   * @return The value of the 'passwordrequireschange' field.
   */
  public java.lang.Boolean getPasswordrequireschange() {
    return passwordrequireschange;
  }


  /**
   * Sets the value of the 'passwordrequireschange' field.
   * @param value the value to set.
   */
  public void setPasswordrequireschange(java.lang.Boolean value) {
    this.passwordrequireschange = value;
  }

  /**
   * Gets the value of the 'registrationdate' field.
   * @return The value of the 'registrationdate' field.
   */
  public java.lang.CharSequence getRegistrationdate() {
    return registrationdate;
  }


  /**
   * Sets the value of the 'registrationdate' field.
   * @param value the value to set.
   */
  public void setRegistrationdate(java.lang.CharSequence value) {
    this.registrationdate = value;
  }

  /**
   * Creates a new profile RecordBuilder.
   * @return A new profile RecordBuilder
   */
  public static profile.Builder newBuilder() {
    return new profile.Builder();
  }

  /**
   * Creates a new profile RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new profile RecordBuilder
   */
  public static profile.Builder newBuilder(profile.Builder other) {
    if (other == null) {
      return new profile.Builder();
    } else {
      return new profile.Builder(other);
    }
  }

  /**
   * Creates a new profile RecordBuilder by copying an existing profile instance.
   * @param other The existing instance to copy.
   * @return A new profile RecordBuilder
   */
  public static profile.Builder newBuilder(profile other) {
    if (other == null) {
      return new profile.Builder();
    } else {
      return new profile.Builder(other);
    }
  }

  /**
   * RecordBuilder for profile instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<profile>
    implements org.apache.avro.data.RecordBuilder<profile> {

    private java.lang.CharSequence username;
    private java.lang.Boolean targetedoptin;
    private java.lang.CharSequence trackingid;
    private java.lang.CharSequence firstname;
    private java.lang.CharSequence title;
    private java.lang.Boolean emailverified;
    private java.lang.CharSequence targetedoptindate;
    private java.util.Map<java.lang.CharSequence,services_value> services;
    private java.lang.CharSequence mobilenumber;
    private java.lang.CharSequence targetedoptoutdate;
    private java.lang.CharSequence hhuserauthorised;
    private java.lang.CharSequence dateofbirth;
    private java.lang.CharSequence hhid;
    private java.lang.Boolean mobilenumberverified;
    private java.lang.CharSequence displayname;
    private java.lang.CharSequence securityquestionid;
    private java.lang.Long mobilenumberchanged;
    private boolean skyoptin;
    private java.lang.CharSequence email;
    private java.lang.CharSequence contactemail;
    private java.lang.CharSequence emailchanged;
    private boolean euportability;
    private java.lang.CharSequence hhusertype;
    private java.lang.CharSequence lastname;
    private boolean termsandconditionsaccepted;
    private java.lang.CharSequence nsprofileid;
    private java.lang.Boolean passwordrequireschange;
    private java.lang.CharSequence registrationdate;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(profile.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.username)) {
        this.username = data().deepCopy(fields()[0].schema(), other.username);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.targetedoptin)) {
        this.targetedoptin = data().deepCopy(fields()[1].schema(), other.targetedoptin);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.trackingid)) {
        this.trackingid = data().deepCopy(fields()[2].schema(), other.trackingid);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.firstname)) {
        this.firstname = data().deepCopy(fields()[3].schema(), other.firstname);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.title)) {
        this.title = data().deepCopy(fields()[4].schema(), other.title);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.emailverified)) {
        this.emailverified = data().deepCopy(fields()[5].schema(), other.emailverified);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.targetedoptindate)) {
        this.targetedoptindate = data().deepCopy(fields()[6].schema(), other.targetedoptindate);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.services)) {
        this.services = data().deepCopy(fields()[7].schema(), other.services);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.mobilenumber)) {
        this.mobilenumber = data().deepCopy(fields()[8].schema(), other.mobilenumber);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.targetedoptoutdate)) {
        this.targetedoptoutdate = data().deepCopy(fields()[9].schema(), other.targetedoptoutdate);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.hhuserauthorised)) {
        this.hhuserauthorised = data().deepCopy(fields()[10].schema(), other.hhuserauthorised);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.dateofbirth)) {
        this.dateofbirth = data().deepCopy(fields()[11].schema(), other.dateofbirth);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.hhid)) {
        this.hhid = data().deepCopy(fields()[12].schema(), other.hhid);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.mobilenumberverified)) {
        this.mobilenumberverified = data().deepCopy(fields()[13].schema(), other.mobilenumberverified);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.displayname)) {
        this.displayname = data().deepCopy(fields()[14].schema(), other.displayname);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.securityquestionid)) {
        this.securityquestionid = data().deepCopy(fields()[15].schema(), other.securityquestionid);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.mobilenumberchanged)) {
        this.mobilenumberchanged = data().deepCopy(fields()[16].schema(), other.mobilenumberchanged);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.skyoptin)) {
        this.skyoptin = data().deepCopy(fields()[17].schema(), other.skyoptin);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.email)) {
        this.email = data().deepCopy(fields()[18].schema(), other.email);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.contactemail)) {
        this.contactemail = data().deepCopy(fields()[19].schema(), other.contactemail);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.emailchanged)) {
        this.emailchanged = data().deepCopy(fields()[20].schema(), other.emailchanged);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.euportability)) {
        this.euportability = data().deepCopy(fields()[21].schema(), other.euportability);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.hhusertype)) {
        this.hhusertype = data().deepCopy(fields()[22].schema(), other.hhusertype);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.lastname)) {
        this.lastname = data().deepCopy(fields()[23].schema(), other.lastname);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.termsandconditionsaccepted)) {
        this.termsandconditionsaccepted = data().deepCopy(fields()[24].schema(), other.termsandconditionsaccepted);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.nsprofileid)) {
        this.nsprofileid = data().deepCopy(fields()[25].schema(), other.nsprofileid);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.passwordrequireschange)) {
        this.passwordrequireschange = data().deepCopy(fields()[26].schema(), other.passwordrequireschange);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.registrationdate)) {
        this.registrationdate = data().deepCopy(fields()[27].schema(), other.registrationdate);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
    }

    /**
     * Creates a Builder by copying an existing profile instance
     * @param other The existing instance to copy.
     */
    private Builder(profile other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.username)) {
        this.username = data().deepCopy(fields()[0].schema(), other.username);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.targetedoptin)) {
        this.targetedoptin = data().deepCopy(fields()[1].schema(), other.targetedoptin);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.trackingid)) {
        this.trackingid = data().deepCopy(fields()[2].schema(), other.trackingid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.firstname)) {
        this.firstname = data().deepCopy(fields()[3].schema(), other.firstname);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.title)) {
        this.title = data().deepCopy(fields()[4].schema(), other.title);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.emailverified)) {
        this.emailverified = data().deepCopy(fields()[5].schema(), other.emailverified);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.targetedoptindate)) {
        this.targetedoptindate = data().deepCopy(fields()[6].schema(), other.targetedoptindate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.services)) {
        this.services = data().deepCopy(fields()[7].schema(), other.services);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.mobilenumber)) {
        this.mobilenumber = data().deepCopy(fields()[8].schema(), other.mobilenumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.targetedoptoutdate)) {
        this.targetedoptoutdate = data().deepCopy(fields()[9].schema(), other.targetedoptoutdate);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.hhuserauthorised)) {
        this.hhuserauthorised = data().deepCopy(fields()[10].schema(), other.hhuserauthorised);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.dateofbirth)) {
        this.dateofbirth = data().deepCopy(fields()[11].schema(), other.dateofbirth);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.hhid)) {
        this.hhid = data().deepCopy(fields()[12].schema(), other.hhid);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.mobilenumberverified)) {
        this.mobilenumberverified = data().deepCopy(fields()[13].schema(), other.mobilenumberverified);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.displayname)) {
        this.displayname = data().deepCopy(fields()[14].schema(), other.displayname);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.securityquestionid)) {
        this.securityquestionid = data().deepCopy(fields()[15].schema(), other.securityquestionid);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.mobilenumberchanged)) {
        this.mobilenumberchanged = data().deepCopy(fields()[16].schema(), other.mobilenumberchanged);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.skyoptin)) {
        this.skyoptin = data().deepCopy(fields()[17].schema(), other.skyoptin);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.email)) {
        this.email = data().deepCopy(fields()[18].schema(), other.email);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.contactemail)) {
        this.contactemail = data().deepCopy(fields()[19].schema(), other.contactemail);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.emailchanged)) {
        this.emailchanged = data().deepCopy(fields()[20].schema(), other.emailchanged);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.euportability)) {
        this.euportability = data().deepCopy(fields()[21].schema(), other.euportability);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.hhusertype)) {
        this.hhusertype = data().deepCopy(fields()[22].schema(), other.hhusertype);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.lastname)) {
        this.lastname = data().deepCopy(fields()[23].schema(), other.lastname);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.termsandconditionsaccepted)) {
        this.termsandconditionsaccepted = data().deepCopy(fields()[24].schema(), other.termsandconditionsaccepted);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.nsprofileid)) {
        this.nsprofileid = data().deepCopy(fields()[25].schema(), other.nsprofileid);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.passwordrequireschange)) {
        this.passwordrequireschange = data().deepCopy(fields()[26].schema(), other.passwordrequireschange);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.registrationdate)) {
        this.registrationdate = data().deepCopy(fields()[27].schema(), other.registrationdate);
        fieldSetFlags()[27] = true;
      }
    }

    /**
      * Gets the value of the 'username' field.
      * @return The value.
      */
    public java.lang.CharSequence getUsername() {
      return username;
    }


    /**
      * Sets the value of the 'username' field.
      * @param value The value of 'username'.
      * @return This builder.
      */
    public profile.Builder setUsername(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.username = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'username' field has been set.
      * @return True if the 'username' field has been set, false otherwise.
      */
    public boolean hasUsername() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'username' field.
      * @return This builder.
      */
    public profile.Builder clearUsername() {
      username = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'targetedoptin' field.
      * @return The value.
      */
    public java.lang.Boolean getTargetedoptin() {
      return targetedoptin;
    }


    /**
      * Sets the value of the 'targetedoptin' field.
      * @param value The value of 'targetedoptin'.
      * @return This builder.
      */
    public profile.Builder setTargetedoptin(java.lang.Boolean value) {
      validate(fields()[1], value);
      this.targetedoptin = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'targetedoptin' field has been set.
      * @return True if the 'targetedoptin' field has been set, false otherwise.
      */
    public boolean hasTargetedoptin() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'targetedoptin' field.
      * @return This builder.
      */
    public profile.Builder clearTargetedoptin() {
      targetedoptin = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'trackingid' field.
      * @return The value.
      */
    public java.lang.CharSequence getTrackingid() {
      return trackingid;
    }


    /**
      * Sets the value of the 'trackingid' field.
      * @param value The value of 'trackingid'.
      * @return This builder.
      */
    public profile.Builder setTrackingid(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.trackingid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'trackingid' field has been set.
      * @return True if the 'trackingid' field has been set, false otherwise.
      */
    public boolean hasTrackingid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'trackingid' field.
      * @return This builder.
      */
    public profile.Builder clearTrackingid() {
      trackingid = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstname' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstname() {
      return firstname;
    }


    /**
      * Sets the value of the 'firstname' field.
      * @param value The value of 'firstname'.
      * @return This builder.
      */
    public profile.Builder setFirstname(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.firstname = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'firstname' field has been set.
      * @return True if the 'firstname' field has been set, false otherwise.
      */
    public boolean hasFirstname() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'firstname' field.
      * @return This builder.
      */
    public profile.Builder clearFirstname() {
      firstname = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public java.lang.CharSequence getTitle() {
      return title;
    }


    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public profile.Builder setTitle(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.title = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public profile.Builder clearTitle() {
      title = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'emailverified' field.
      * @return The value.
      */
    public java.lang.Boolean getEmailverified() {
      return emailverified;
    }


    /**
      * Sets the value of the 'emailverified' field.
      * @param value The value of 'emailverified'.
      * @return This builder.
      */
    public profile.Builder setEmailverified(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.emailverified = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'emailverified' field has been set.
      * @return True if the 'emailverified' field has been set, false otherwise.
      */
    public boolean hasEmailverified() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'emailverified' field.
      * @return This builder.
      */
    public profile.Builder clearEmailverified() {
      emailverified = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'targetedoptindate' field.
      * @return The value.
      */
    public java.lang.CharSequence getTargetedoptindate() {
      return targetedoptindate;
    }


    /**
      * Sets the value of the 'targetedoptindate' field.
      * @param value The value of 'targetedoptindate'.
      * @return This builder.
      */
    public profile.Builder setTargetedoptindate(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.targetedoptindate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'targetedoptindate' field has been set.
      * @return True if the 'targetedoptindate' field has been set, false otherwise.
      */
    public boolean hasTargetedoptindate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'targetedoptindate' field.
      * @return This builder.
      */
    public profile.Builder clearTargetedoptindate() {
      targetedoptindate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'services' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,services_value> getServices() {
      return services;
    }


    /**
      * Sets the value of the 'services' field.
      * @param value The value of 'services'.
      * @return This builder.
      */
    public profile.Builder setServices(java.util.Map<java.lang.CharSequence,services_value> value) {
      validate(fields()[7], value);
      this.services = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'services' field has been set.
      * @return True if the 'services' field has been set, false otherwise.
      */
    public boolean hasServices() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'services' field.
      * @return This builder.
      */
    public profile.Builder clearServices() {
      services = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'mobilenumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getMobilenumber() {
      return mobilenumber;
    }


    /**
      * Sets the value of the 'mobilenumber' field.
      * @param value The value of 'mobilenumber'.
      * @return This builder.
      */
    public profile.Builder setMobilenumber(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.mobilenumber = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'mobilenumber' field has been set.
      * @return True if the 'mobilenumber' field has been set, false otherwise.
      */
    public boolean hasMobilenumber() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'mobilenumber' field.
      * @return This builder.
      */
    public profile.Builder clearMobilenumber() {
      mobilenumber = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'targetedoptoutdate' field.
      * @return The value.
      */
    public java.lang.CharSequence getTargetedoptoutdate() {
      return targetedoptoutdate;
    }


    /**
      * Sets the value of the 'targetedoptoutdate' field.
      * @param value The value of 'targetedoptoutdate'.
      * @return This builder.
      */
    public profile.Builder setTargetedoptoutdate(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.targetedoptoutdate = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'targetedoptoutdate' field has been set.
      * @return True if the 'targetedoptoutdate' field has been set, false otherwise.
      */
    public boolean hasTargetedoptoutdate() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'targetedoptoutdate' field.
      * @return This builder.
      */
    public profile.Builder clearTargetedoptoutdate() {
      targetedoptoutdate = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'hhuserauthorised' field.
      * @return The value.
      */
    public java.lang.CharSequence getHhuserauthorised() {
      return hhuserauthorised;
    }


    /**
      * Sets the value of the 'hhuserauthorised' field.
      * @param value The value of 'hhuserauthorised'.
      * @return This builder.
      */
    public profile.Builder setHhuserauthorised(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.hhuserauthorised = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'hhuserauthorised' field has been set.
      * @return True if the 'hhuserauthorised' field has been set, false otherwise.
      */
    public boolean hasHhuserauthorised() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'hhuserauthorised' field.
      * @return This builder.
      */
    public profile.Builder clearHhuserauthorised() {
      hhuserauthorised = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'dateofbirth' field.
      * @return The value.
      */
    public java.lang.CharSequence getDateofbirth() {
      return dateofbirth;
    }


    /**
      * Sets the value of the 'dateofbirth' field.
      * @param value The value of 'dateofbirth'.
      * @return This builder.
      */
    public profile.Builder setDateofbirth(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.dateofbirth = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'dateofbirth' field has been set.
      * @return True if the 'dateofbirth' field has been set, false otherwise.
      */
    public boolean hasDateofbirth() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'dateofbirth' field.
      * @return This builder.
      */
    public profile.Builder clearDateofbirth() {
      dateofbirth = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'hhid' field.
      * @return The value.
      */
    public java.lang.CharSequence getHhid() {
      return hhid;
    }


    /**
      * Sets the value of the 'hhid' field.
      * @param value The value of 'hhid'.
      * @return This builder.
      */
    public profile.Builder setHhid(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.hhid = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'hhid' field has been set.
      * @return True if the 'hhid' field has been set, false otherwise.
      */
    public boolean hasHhid() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'hhid' field.
      * @return This builder.
      */
    public profile.Builder clearHhid() {
      hhid = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'mobilenumberverified' field.
      * @return The value.
      */
    public java.lang.Boolean getMobilenumberverified() {
      return mobilenumberverified;
    }


    /**
      * Sets the value of the 'mobilenumberverified' field.
      * @param value The value of 'mobilenumberverified'.
      * @return This builder.
      */
    public profile.Builder setMobilenumberverified(java.lang.Boolean value) {
      validate(fields()[13], value);
      this.mobilenumberverified = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'mobilenumberverified' field has been set.
      * @return True if the 'mobilenumberverified' field has been set, false otherwise.
      */
    public boolean hasMobilenumberverified() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'mobilenumberverified' field.
      * @return This builder.
      */
    public profile.Builder clearMobilenumberverified() {
      mobilenumberverified = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'displayname' field.
      * @return The value.
      */
    public java.lang.CharSequence getDisplayname() {
      return displayname;
    }


    /**
      * Sets the value of the 'displayname' field.
      * @param value The value of 'displayname'.
      * @return This builder.
      */
    public profile.Builder setDisplayname(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.displayname = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'displayname' field has been set.
      * @return True if the 'displayname' field has been set, false otherwise.
      */
    public boolean hasDisplayname() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'displayname' field.
      * @return This builder.
      */
    public profile.Builder clearDisplayname() {
      displayname = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'securityquestionid' field.
      * @return The value.
      */
    public java.lang.CharSequence getSecurityquestionid() {
      return securityquestionid;
    }


    /**
      * Sets the value of the 'securityquestionid' field.
      * @param value The value of 'securityquestionid'.
      * @return This builder.
      */
    public profile.Builder setSecurityquestionid(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.securityquestionid = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'securityquestionid' field has been set.
      * @return True if the 'securityquestionid' field has been set, false otherwise.
      */
    public boolean hasSecurityquestionid() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'securityquestionid' field.
      * @return This builder.
      */
    public profile.Builder clearSecurityquestionid() {
      securityquestionid = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'mobilenumberchanged' field.
      * @return The value.
      */
    public java.lang.Long getMobilenumberchanged() {
      return mobilenumberchanged;
    }


    /**
      * Sets the value of the 'mobilenumberchanged' field.
      * @param value The value of 'mobilenumberchanged'.
      * @return This builder.
      */
    public profile.Builder setMobilenumberchanged(java.lang.Long value) {
      validate(fields()[16], value);
      this.mobilenumberchanged = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'mobilenumberchanged' field has been set.
      * @return True if the 'mobilenumberchanged' field has been set, false otherwise.
      */
    public boolean hasMobilenumberchanged() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'mobilenumberchanged' field.
      * @return This builder.
      */
    public profile.Builder clearMobilenumberchanged() {
      mobilenumberchanged = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'skyoptin' field.
      * @return The value.
      */
    public boolean getSkyoptin() {
      return skyoptin;
    }


    /**
      * Sets the value of the 'skyoptin' field.
      * @param value The value of 'skyoptin'.
      * @return This builder.
      */
    public profile.Builder setSkyoptin(boolean value) {
      validate(fields()[17], value);
      this.skyoptin = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'skyoptin' field has been set.
      * @return True if the 'skyoptin' field has been set, false otherwise.
      */
    public boolean hasSkyoptin() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'skyoptin' field.
      * @return This builder.
      */
    public profile.Builder clearSkyoptin() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public profile.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.email = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public profile.Builder clearEmail() {
      email = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'contactemail' field.
      * @return The value.
      */
    public java.lang.CharSequence getContactemail() {
      return contactemail;
    }


    /**
      * Sets the value of the 'contactemail' field.
      * @param value The value of 'contactemail'.
      * @return This builder.
      */
    public profile.Builder setContactemail(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.contactemail = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'contactemail' field has been set.
      * @return True if the 'contactemail' field has been set, false otherwise.
      */
    public boolean hasContactemail() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'contactemail' field.
      * @return This builder.
      */
    public profile.Builder clearContactemail() {
      contactemail = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'emailchanged' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmailchanged() {
      return emailchanged;
    }


    /**
      * Sets the value of the 'emailchanged' field.
      * @param value The value of 'emailchanged'.
      * @return This builder.
      */
    public profile.Builder setEmailchanged(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.emailchanged = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'emailchanged' field has been set.
      * @return True if the 'emailchanged' field has been set, false otherwise.
      */
    public boolean hasEmailchanged() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'emailchanged' field.
      * @return This builder.
      */
    public profile.Builder clearEmailchanged() {
      emailchanged = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'euportability' field.
      * @return The value.
      */
    public boolean getEuportability() {
      return euportability;
    }


    /**
      * Sets the value of the 'euportability' field.
      * @param value The value of 'euportability'.
      * @return This builder.
      */
    public profile.Builder setEuportability(boolean value) {
      validate(fields()[21], value);
      this.euportability = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'euportability' field has been set.
      * @return True if the 'euportability' field has been set, false otherwise.
      */
    public boolean hasEuportability() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'euportability' field.
      * @return This builder.
      */
    public profile.Builder clearEuportability() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'hhusertype' field.
      * @return The value.
      */
    public java.lang.CharSequence getHhusertype() {
      return hhusertype;
    }


    /**
      * Sets the value of the 'hhusertype' field.
      * @param value The value of 'hhusertype'.
      * @return This builder.
      */
    public profile.Builder setHhusertype(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.hhusertype = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'hhusertype' field has been set.
      * @return True if the 'hhusertype' field has been set, false otherwise.
      */
    public boolean hasHhusertype() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'hhusertype' field.
      * @return This builder.
      */
    public profile.Builder clearHhusertype() {
      hhusertype = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastname' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastname() {
      return lastname;
    }


    /**
      * Sets the value of the 'lastname' field.
      * @param value The value of 'lastname'.
      * @return This builder.
      */
    public profile.Builder setLastname(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.lastname = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'lastname' field has been set.
      * @return True if the 'lastname' field has been set, false otherwise.
      */
    public boolean hasLastname() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'lastname' field.
      * @return This builder.
      */
    public profile.Builder clearLastname() {
      lastname = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'termsandconditionsaccepted' field.
      * @return The value.
      */
    public boolean getTermsandconditionsaccepted() {
      return termsandconditionsaccepted;
    }


    /**
      * Sets the value of the 'termsandconditionsaccepted' field.
      * @param value The value of 'termsandconditionsaccepted'.
      * @return This builder.
      */
    public profile.Builder setTermsandconditionsaccepted(boolean value) {
      validate(fields()[24], value);
      this.termsandconditionsaccepted = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'termsandconditionsaccepted' field has been set.
      * @return True if the 'termsandconditionsaccepted' field has been set, false otherwise.
      */
    public boolean hasTermsandconditionsaccepted() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'termsandconditionsaccepted' field.
      * @return This builder.
      */
    public profile.Builder clearTermsandconditionsaccepted() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'nsprofileid' field.
      * @return The value.
      */
    public java.lang.CharSequence getNsprofileid() {
      return nsprofileid;
    }


    /**
      * Sets the value of the 'nsprofileid' field.
      * @param value The value of 'nsprofileid'.
      * @return This builder.
      */
    public profile.Builder setNsprofileid(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.nsprofileid = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'nsprofileid' field has been set.
      * @return True if the 'nsprofileid' field has been set, false otherwise.
      */
    public boolean hasNsprofileid() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'nsprofileid' field.
      * @return This builder.
      */
    public profile.Builder clearNsprofileid() {
      nsprofileid = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'passwordrequireschange' field.
      * @return The value.
      */
    public java.lang.Boolean getPasswordrequireschange() {
      return passwordrequireschange;
    }


    /**
      * Sets the value of the 'passwordrequireschange' field.
      * @param value The value of 'passwordrequireschange'.
      * @return This builder.
      */
    public profile.Builder setPasswordrequireschange(java.lang.Boolean value) {
      validate(fields()[26], value);
      this.passwordrequireschange = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'passwordrequireschange' field has been set.
      * @return True if the 'passwordrequireschange' field has been set, false otherwise.
      */
    public boolean hasPasswordrequireschange() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'passwordrequireschange' field.
      * @return This builder.
      */
    public profile.Builder clearPasswordrequireschange() {
      passwordrequireschange = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'registrationdate' field.
      * @return The value.
      */
    public java.lang.CharSequence getRegistrationdate() {
      return registrationdate;
    }


    /**
      * Sets the value of the 'registrationdate' field.
      * @param value The value of 'registrationdate'.
      * @return This builder.
      */
    public profile.Builder setRegistrationdate(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.registrationdate = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'registrationdate' field has been set.
      * @return True if the 'registrationdate' field has been set, false otherwise.
      */
    public boolean hasRegistrationdate() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'registrationdate' field.
      * @return This builder.
      */
    public profile.Builder clearRegistrationdate() {
      registrationdate = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public profile build() {
      try {
        profile record = new profile();
        record.username = fieldSetFlags()[0] ? this.username : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.targetedoptin = fieldSetFlags()[1] ? this.targetedoptin : (java.lang.Boolean) defaultValue(fields()[1]);
        record.trackingid = fieldSetFlags()[2] ? this.trackingid : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.firstname = fieldSetFlags()[3] ? this.firstname : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.title = fieldSetFlags()[4] ? this.title : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.emailverified = fieldSetFlags()[5] ? this.emailverified : (java.lang.Boolean) defaultValue(fields()[5]);
        record.targetedoptindate = fieldSetFlags()[6] ? this.targetedoptindate : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.services = fieldSetFlags()[7] ? this.services : (java.util.Map<java.lang.CharSequence,services_value>) defaultValue(fields()[7]);
        record.mobilenumber = fieldSetFlags()[8] ? this.mobilenumber : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.targetedoptoutdate = fieldSetFlags()[9] ? this.targetedoptoutdate : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.hhuserauthorised = fieldSetFlags()[10] ? this.hhuserauthorised : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.dateofbirth = fieldSetFlags()[11] ? this.dateofbirth : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.hhid = fieldSetFlags()[12] ? this.hhid : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.mobilenumberverified = fieldSetFlags()[13] ? this.mobilenumberverified : (java.lang.Boolean) defaultValue(fields()[13]);
        record.displayname = fieldSetFlags()[14] ? this.displayname : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.securityquestionid = fieldSetFlags()[15] ? this.securityquestionid : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.mobilenumberchanged = fieldSetFlags()[16] ? this.mobilenumberchanged : (java.lang.Long) defaultValue(fields()[16]);
        record.skyoptin = fieldSetFlags()[17] ? this.skyoptin : (java.lang.Boolean) defaultValue(fields()[17]);
        record.email = fieldSetFlags()[18] ? this.email : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.contactemail = fieldSetFlags()[19] ? this.contactemail : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.emailchanged = fieldSetFlags()[20] ? this.emailchanged : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.euportability = fieldSetFlags()[21] ? this.euportability : (java.lang.Boolean) defaultValue(fields()[21]);
        record.hhusertype = fieldSetFlags()[22] ? this.hhusertype : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.lastname = fieldSetFlags()[23] ? this.lastname : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.termsandconditionsaccepted = fieldSetFlags()[24] ? this.termsandconditionsaccepted : (java.lang.Boolean) defaultValue(fields()[24]);
        record.nsprofileid = fieldSetFlags()[25] ? this.nsprofileid : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.passwordrequireschange = fieldSetFlags()[26] ? this.passwordrequireschange : (java.lang.Boolean) defaultValue(fields()[26]);
        record.registrationdate = fieldSetFlags()[27] ? this.registrationdate : (java.lang.CharSequence) defaultValue(fields()[27]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<profile>
    WRITER$ = (org.apache.avro.io.DatumWriter<profile>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<profile>
    READER$ = (org.apache.avro.io.DatumReader<profile>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.username == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.username);
    }

    if (this.targetedoptin == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.targetedoptin);
    }

    out.writeString(this.trackingid);

    if (this.firstname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.firstname);
    }

    if (this.title == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.title);
    }

    if (this.emailverified == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.emailverified);
    }

    if (this.targetedoptindate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.targetedoptindate);
    }

    long size0 = this.services.size();
    out.writeMapStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.util.Map.Entry<java.lang.CharSequence, services_value> e0: this.services.entrySet()) {
      actualSize0++;
      out.startItem();
      out.writeString(e0.getKey());
      services_value v0 = e0.getValue();
      v0.customEncode(out);
    }
    out.writeMapEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    if (this.mobilenumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.mobilenumber);
    }

    if (this.targetedoptoutdate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.targetedoptoutdate);
    }

    if (this.hhuserauthorised == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.hhuserauthorised);
    }

    if (this.dateofbirth == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.dateofbirth);
    }

    if (this.hhid == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.hhid);
    }

    if (this.mobilenumberverified == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.mobilenumberverified);
    }

    if (this.displayname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.displayname);
    }

    if (this.securityquestionid == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.securityquestionid);
    }

    if (this.mobilenumberchanged == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.mobilenumberchanged);
    }

    out.writeBoolean(this.skyoptin);

    if (this.email == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.email);
    }

    if (this.contactemail == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.contactemail);
    }

    if (this.emailchanged == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.emailchanged);
    }

    out.writeBoolean(this.euportability);

    out.writeString(this.hhusertype);

    if (this.lastname == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.lastname);
    }

    out.writeBoolean(this.termsandconditionsaccepted);

    out.writeString(this.nsprofileid);

    if (this.passwordrequireschange == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeBoolean(this.passwordrequireschange);
    }

    out.writeString(this.registrationdate);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.username = null;
      } else {
        this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.targetedoptin = null;
      } else {
        this.targetedoptin = in.readBoolean();
      }

      this.trackingid = in.readString(this.trackingid instanceof Utf8 ? (Utf8)this.trackingid : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.firstname = null;
      } else {
        this.firstname = in.readString(this.firstname instanceof Utf8 ? (Utf8)this.firstname : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.title = null;
      } else {
        this.title = in.readString(this.title instanceof Utf8 ? (Utf8)this.title : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.emailverified = null;
      } else {
        this.emailverified = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.targetedoptindate = null;
      } else {
        this.targetedoptindate = in.readString(this.targetedoptindate instanceof Utf8 ? (Utf8)this.targetedoptindate : null);
      }

      long size0 = in.readMapStart();
      java.util.Map<java.lang.CharSequence,services_value> m0 = this.services; // Need fresh name due to limitation of macro system
      if (m0 == null) {
        m0 = new java.util.HashMap<java.lang.CharSequence,services_value>((int)size0);
        this.services = m0;
      } else m0.clear();
      for ( ; 0 < size0; size0 = in.mapNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.CharSequence k0 = null;
          k0 = in.readString(k0 instanceof Utf8 ? (Utf8)k0 : null);
          services_value v0 = null;
          if (v0 == null) {
            v0 = new services_value();
          }
          v0.customDecode(in);
          m0.put(k0, v0);
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.mobilenumber = null;
      } else {
        this.mobilenumber = in.readString(this.mobilenumber instanceof Utf8 ? (Utf8)this.mobilenumber : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.targetedoptoutdate = null;
      } else {
        this.targetedoptoutdate = in.readString(this.targetedoptoutdate instanceof Utf8 ? (Utf8)this.targetedoptoutdate : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.hhuserauthorised = null;
      } else {
        this.hhuserauthorised = in.readString(this.hhuserauthorised instanceof Utf8 ? (Utf8)this.hhuserauthorised : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.dateofbirth = null;
      } else {
        this.dateofbirth = in.readString(this.dateofbirth instanceof Utf8 ? (Utf8)this.dateofbirth : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.hhid = null;
      } else {
        this.hhid = in.readString(this.hhid instanceof Utf8 ? (Utf8)this.hhid : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.mobilenumberverified = null;
      } else {
        this.mobilenumberverified = in.readBoolean();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.displayname = null;
      } else {
        this.displayname = in.readString(this.displayname instanceof Utf8 ? (Utf8)this.displayname : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.securityquestionid = null;
      } else {
        this.securityquestionid = in.readString(this.securityquestionid instanceof Utf8 ? (Utf8)this.securityquestionid : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.mobilenumberchanged = null;
      } else {
        this.mobilenumberchanged = in.readLong();
      }

      this.skyoptin = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.email = null;
      } else {
        this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.contactemail = null;
      } else {
        this.contactemail = in.readString(this.contactemail instanceof Utf8 ? (Utf8)this.contactemail : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.emailchanged = null;
      } else {
        this.emailchanged = in.readString(this.emailchanged instanceof Utf8 ? (Utf8)this.emailchanged : null);
      }

      this.euportability = in.readBoolean();

      this.hhusertype = in.readString(this.hhusertype instanceof Utf8 ? (Utf8)this.hhusertype : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.lastname = null;
      } else {
        this.lastname = in.readString(this.lastname instanceof Utf8 ? (Utf8)this.lastname : null);
      }

      this.termsandconditionsaccepted = in.readBoolean();

      this.nsprofileid = in.readString(this.nsprofileid instanceof Utf8 ? (Utf8)this.nsprofileid : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.passwordrequireschange = null;
      } else {
        this.passwordrequireschange = in.readBoolean();
      }

      this.registrationdate = in.readString(this.registrationdate instanceof Utf8 ? (Utf8)this.registrationdate : null);

    } else {
      for (int i = 0; i < 28; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.username = null;
          } else {
            this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.targetedoptin = null;
          } else {
            this.targetedoptin = in.readBoolean();
          }
          break;

        case 2:
          this.trackingid = in.readString(this.trackingid instanceof Utf8 ? (Utf8)this.trackingid : null);
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.firstname = null;
          } else {
            this.firstname = in.readString(this.firstname instanceof Utf8 ? (Utf8)this.firstname : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.title = null;
          } else {
            this.title = in.readString(this.title instanceof Utf8 ? (Utf8)this.title : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.emailverified = null;
          } else {
            this.emailverified = in.readBoolean();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.targetedoptindate = null;
          } else {
            this.targetedoptindate = in.readString(this.targetedoptindate instanceof Utf8 ? (Utf8)this.targetedoptindate : null);
          }
          break;

        case 7:
          long size0 = in.readMapStart();
          java.util.Map<java.lang.CharSequence,services_value> m0 = this.services; // Need fresh name due to limitation of macro system
          if (m0 == null) {
            m0 = new java.util.HashMap<java.lang.CharSequence,services_value>((int)size0);
            this.services = m0;
          } else m0.clear();
          for ( ; 0 < size0; size0 = in.mapNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.CharSequence k0 = null;
              k0 = in.readString(k0 instanceof Utf8 ? (Utf8)k0 : null);
              services_value v0 = null;
              if (v0 == null) {
                v0 = new services_value();
              }
              v0.customDecode(in);
              m0.put(k0, v0);
            }
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.mobilenumber = null;
          } else {
            this.mobilenumber = in.readString(this.mobilenumber instanceof Utf8 ? (Utf8)this.mobilenumber : null);
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.targetedoptoutdate = null;
          } else {
            this.targetedoptoutdate = in.readString(this.targetedoptoutdate instanceof Utf8 ? (Utf8)this.targetedoptoutdate : null);
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.hhuserauthorised = null;
          } else {
            this.hhuserauthorised = in.readString(this.hhuserauthorised instanceof Utf8 ? (Utf8)this.hhuserauthorised : null);
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.dateofbirth = null;
          } else {
            this.dateofbirth = in.readString(this.dateofbirth instanceof Utf8 ? (Utf8)this.dateofbirth : null);
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.hhid = null;
          } else {
            this.hhid = in.readString(this.hhid instanceof Utf8 ? (Utf8)this.hhid : null);
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.mobilenumberverified = null;
          } else {
            this.mobilenumberverified = in.readBoolean();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.displayname = null;
          } else {
            this.displayname = in.readString(this.displayname instanceof Utf8 ? (Utf8)this.displayname : null);
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.securityquestionid = null;
          } else {
            this.securityquestionid = in.readString(this.securityquestionid instanceof Utf8 ? (Utf8)this.securityquestionid : null);
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.mobilenumberchanged = null;
          } else {
            this.mobilenumberchanged = in.readLong();
          }
          break;

        case 17:
          this.skyoptin = in.readBoolean();
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.email = null;
          } else {
            this.email = in.readString(this.email instanceof Utf8 ? (Utf8)this.email : null);
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.contactemail = null;
          } else {
            this.contactemail = in.readString(this.contactemail instanceof Utf8 ? (Utf8)this.contactemail : null);
          }
          break;

        case 20:
          if (in.readIndex() != 1) {
            in.readNull();
            this.emailchanged = null;
          } else {
            this.emailchanged = in.readString(this.emailchanged instanceof Utf8 ? (Utf8)this.emailchanged : null);
          }
          break;

        case 21:
          this.euportability = in.readBoolean();
          break;

        case 22:
          this.hhusertype = in.readString(this.hhusertype instanceof Utf8 ? (Utf8)this.hhusertype : null);
          break;

        case 23:
          if (in.readIndex() != 1) {
            in.readNull();
            this.lastname = null;
          } else {
            this.lastname = in.readString(this.lastname instanceof Utf8 ? (Utf8)this.lastname : null);
          }
          break;

        case 24:
          this.termsandconditionsaccepted = in.readBoolean();
          break;

        case 25:
          this.nsprofileid = in.readString(this.nsprofileid instanceof Utf8 ? (Utf8)this.nsprofileid : null);
          break;

        case 26:
          if (in.readIndex() != 1) {
            in.readNull();
            this.passwordrequireschange = null;
          } else {
            this.passwordrequireschange = in.readBoolean();
          }
          break;

        case 27:
          this.registrationdate = in.readString(this.registrationdate instanceof Utf8 ? (Utf8)this.registrationdate : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










